name: Deploy Maven Release
on:
  workflow_call:
    inputs:
      servicePath:
        type: string
        required: true
        description: 'Must match the name of the service folder'
      buildProfile:
        type: string
        required: false
        default: 'release,!dev'
        description: 'Build profile'
      buildArgument:
        type: string
        required: false
        default: ''
        description: 'Optional Maven Argument. Example: -Dquarkus.profile=dev'
      imageHost:
        type: string
        required: false
        default: ''
        description: 'docker-static or docker'
      imagePath:
        type: string
        required: false
        default: ''
        description: 'Image Path with version. e.g: thdks/couchdb:latest'
      artifactoryName:
        type: string
        required: true
        description: 'Artifactory name'
    secrets:
      artifactoryUsername:
        required: false
      artifactoryPassword:
        required: false
      githubToken:
        required: false
jobs:
  build-and-deploy-release:
    runs-on: one-thd-onprem-np
    steps:
      - id: prepare-runner
        name: Prepare Runner
        uses: one-thd/monarch-workflows/.github/actions/prepare-runner@master

      - id: prepare-maven
        name: Prepare Maven
        uses: one-thd/monarch-workflows/.github/actions/prepare-maven@master
        with:
          artifactoryUsername: ${{ secrets.artifactoryUsername }}
          artifactoryPassword: ${{ secrets.artifactoryPassword }}

      - id: docker-setup
        name: Pull Docker Image
        if: ${{ (inputs.imageHost == 'docker' || inputs.imageHost == 'docker-static') && inputs.imagePath != '' }}
        uses: one-thd/monarch-workflows/.github/actions/prepare-docker@master
        with:
          imageHost: ${{ inputs.imageHost }}
          imagePath: ${{ inputs.imagePath }}
          artifactoryUsername: ${{ secrets.artifactoryUsername }}
          artifactoryPassword: ${{ secrets.artifactoryPassword }}

      - id: run-build
        name: Build
        uses: one-thd/monarch-workflows/.github/actions/build-project@master
        with:
          buildType: 'release'
          buildProfile: ${{ inputs.buildProfile }}
          buildArgument: ${{ inputs.buildArgument }}
          artifactoryName: ${{ inputs.artifactoryName }}
          mavenPath: ${{ steps.prepare-maven.outputs.maven-path }}
          servicePath: ${{ inputs.servicePath }}
          githubToken: ${{ secrets.githubToken }}

      - id: gather-metadata
        name: Gather metadata
        run: |
          APP_NAME=$(cat ./${{ inputs.servicePath }}/pom.xml | \
            grep -e "<artifactId>." | \
            head -1 | \
            cut -d '<' -f 2 | \
            cut -d '>' -f 2)
          
          APP_VERSION=$(cat ./${{ inputs.servicePath }}/pom.xml | \
            grep -e "<version>." | \
            head -1 | \
            cut -d '<' -f 2 | \
            cut -d '>' -f 2)
          
          jq -n \
            --arg app $APP_NAME \
            --arg version $APP_VERSION \
            '{"app":$app,"version":$version}' > metadata

      - id: export-metadata
        name: Export metadata
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifactoryName }}-metadata
          path: ./metadata

      - id: export-artifact
        name: Export artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifactoryName }}
          path: ./changeset-service/target

      - id: date
        name: Get current date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Set Build Number
        shell: bash
        run: echo "GITHUB_BUILD_NUMBER=${{ steps.date.outputs.date }}.${{ github.run_id }}" >> $GITHUB_ENV

      - name: Tag CI version
        run: |
          git tag -a ci-monarch-${{ inputs.artifactoryName }}-${{ env.GITHUB_BUILD_NUMBER }} -m "Auto tagged by CI pipeline by GitHub Actions"
          git push origin ci-monarch-${{ inputs.artifactoryName }}-${{ env.GITHUB_BUILD_NUMBER }}      
    
